######################## LUS Configuration ##############################
lia.Monitor.debug = false

#  Place your LUSs and your Farm group here
#  Separate multiple values by ","
lia.Monitor.LUSs = monalisa.cern.ch,monalisa.cacr.caltech.edu

# REPLACE THIS WITH YOUR OWN GROUP !!!
# You can gather data from several groups by providing a comma-separated
# list of group names. Take care, the names are case-sensitive.
lia.Monitor.group = test

#########################################################################

################## Publish repository statistics ########################
# Export repository statistics to a list of services that is contained in
# the file at this address

lia.Repository.ApMonExport.ConfigFile=http://monalisa.caltech.edu/repository.conf
#########################################################################

################# Database configuration ################################
lia.Monitor.jdbcDriverString = org.postgresql.Driver

#Default Values used in 'pgsql_store'
lia.Monitor.ServerName = 127.0.0.1
lia.Monitor.DatabaseName = mon_data
lia.Monitor.DatabasePort = 5432
lia.Monitor.UserName = mon_user
lia.Monitor.Pass = mon_pass
#########################################################################

##################### Store Client configuration follows ################
## Replace the original timestamp of the data with this machine's current
## time. If you trust the services' time settings you can set this to 
## false in order to keep the original timestamp set by the service.
lia.Monitor.JStore.storeLocalTime=true

##default config
##  Global parameters to be stored
#lia.Monitor.JiniClient.Store.global_params=Load5,TotalIO_Rate_IN,TotalIO_Rate_OUT,NoCPUs
lia.Monitor.JiniClient.Store.global_params=

##  Predicates to register with
##  Separate multiple predicated by ","
##  One predicate can look like:
##  Farm/Cluster/Node/start_time/end_time/function_list
##  Function list contains function names separated by "|"
##
##  Rule of thumb: add the exact predicates for the data you want to store,
##  do NOT put something like */*/* ... 
##
lia.Monitor.JiniClient.Store.predicates=*/WAN/*/%_IN|%_OUT,\
                                        */Master/*/Load5|%_IN|%_OUT,\
					*/MonaLisa

## Or for a particular PROOF facility (comment the above, change and uncomment the lines below)
# lia.Monitor.JiniClient.Store.predicates=aliendb1.cern.ch/PROOF::CAF::STORAGE_xrootd_Nodes/*/blocks_%|cpu_%|eth%|load1|mem_%|pages_%|processes|sockets_tcp|sockets_udp|sockets_unix|swap_%|total_%|proofserv_count|xrootd_up|xproofd_up|cmsd_up|pool_free|staging_queue_size|var_free|root_free,\
#                                         aliendb1.cern.ch/PROOF::CAF::STORAGE_server_xrootd_Services/%/space_free|space_total,\
#                                         aliendb1.cern.ch/PROOF::CAF::STORAGE_xrddm

## Do not store in the database data that matches one of these predicates
##
## The number of CPUs is only used to display real-time statistics, we don't need history for this parameter
lia.Monitor.JiniClient.Store.dontStore=*/*/*/NoCPUs,\
                                       aliendb1.cern.ch/PROOF::CAF::STORAGE_xrddm,\
                                       aliendb1.cern.ch/PROOF::CAF::STORAGE_server_xrootd_Services/%/space_free|space_total

# List of exceptions to the exclusions above
lia.Monitor.Store.storeOnly=

# Values that are collected but processed by filters and should be completely discarded afterwards
lia.Monitor.Store.Cache.reject=

##Some examples:
#lia.Monitor.JiniClient.Store.global_params=Load5,TotalIO_Rate_IN,TotalIO_Rate_OUT,NoCPUs
#lia.Monitor.JiniClient.Store.predicates=caltech/Master/*,caltech/JOBS/*
#lia.Monitor.JiniClient.Store.predicates=slac/%IEPM-BW%/*/-43200000,*/Master/*/-1/-1/Load5
#lia.Monitor.JiniClient.Store.predicates=*/Master/*/-1/-1/Load5|%_IN|%_OUT,*/ABPing/*/-1,*/MonaLisa/*/-1/-1/Cpu_%
#########################################################################

########################### Logging options #############################
#logging options
handlers= java.util.logging.ConsoleHandler
#.level=FINEST
.level = INFO
java.util.logging.ConsoleHandler.level = FINEST
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

monalisa.security.level=WARNING
monalisa.gss.level=WARNING

lia.Monitor.modules.monProcIO.level=OFF
lia.Monitor.modules.monProcLoad.level=OFF

#########################################################################
  
################ Store configuration ####################################
lia.Monitor.readonly.store = false

lia.Monitor.Store.TransparentStoreFast.web_writes = 3

##   There is one table for each interval you want data stored to
##
##   One table description looks like :
## lia.Monitor.Store.TransparentStoreFast.writer_N.total_time=<length in seconds of the interval you want data to be stored on>
## lia.Monitor.Store.TransparentStoreFast.writer_N.samples=<number of values to be stored on this interval, must be greater than 0>
## lia.Monitor.Store.TransparentStoreFast.writer_N.table_name=<table name, should be unique>
## lia.Monitor.Store.TransparentStoreFast.writer_N.descr=<description for this interval, will be displayed on the web pages>
## lia.Monitor.Store.TransparentStoreFast.writer_N.writemode=<write mode>
##
##   Possible values for write mode are :
##
## 0  (default if not specified otherwise) : write average values to this table, one for each total_time/samples seconds (Result objects)
## 1  : write every value received, do not do any average (Result objects)
##
## 2  : special table for storing objects (eResult objects)
##
## 3  : write average values to a in-memory table, no data is written on the disk
## 4  : write every value to a in-memory table, no data is written on the disk
##
## 5  : write average values to an optimized sql table
## 6  : write every value to an optimized sql table
##
## 7  : average values in separate table for each unique ID (this is the preferred method now)
## 8  : every value to a separate table for each unique ID
## 
## WARNING : modes 7 and 8 work ONLY with PostgreSQL DBMS, do not try to use them with MySQL
##
## WARNING : modes 7 and 8 work well with up to 10000-12000 tables. So you should limit the data you
##           gather to something like 10000/no_of_writers unique Farm/Cluster/Node/Function combinations.
##           If you have many more unique IDs you can try tuning the PostgreSQL parameters or you can use
##           writemode 5. Writemode 5 is good for storing many different IDs but it is not so good at
##           retrieving data from the database because a single table is used to store all the data.
##
##
##   If the repository receives many different parameters (for example netflow statistics etc), you should use
## writemode 0 or 1 because you might run into memory problems.
##
##
##   When write mode is 1,2,4,6 or 8, the "samples" value is ignored, all the data that is received is stored to the database
##   
##   For all the tables data older than now()-total_time is deleted.
## 
##   Only tables with write mode=0, 3, 5 or 7 are shown on the web page


# 2 months, 2 minutes resolution
lia.Monitor.Store.TransparentStoreFast.writer_0.total_time=5184000
lia.Monitor.Store.TransparentStoreFast.writer_0.samples=43200
lia.Monitor.Store.TransparentStoreFast.writer_0.table_name=w4_2m
lia.Monitor.Store.TransparentStoreFast.writer_0.descr=2m 2min
lia.Monitor.Store.TransparentStoreFast.writer_0.writemode=11

# 1 year, 30 minutes resolution
lia.Monitor.Store.TransparentStoreFast.writer_1.total_time=31536000
lia.Monitor.Store.TransparentStoreFast.writer_1.samples=17520
lia.Monitor.Store.TransparentStoreFast.writer_1.table_name=w4_30m
lia.Monitor.Store.TransparentStoreFast.writer_1.descr=1y 30min
lia.Monitor.Store.TransparentStoreFast.writer_1.writemode=11

# 10 years, 150 minutes resolution
lia.Monitor.Store.TransparentStoreFast.writer_2.total_time=315360000
lia.Monitor.Store.TransparentStoreFast.writer_2.samples=35040
lia.Monitor.Store.TransparentStoreFast.writer_2.table_name=w4_150m
lia.Monitor.Store.TransparentStoreFast.writer_2.descr=10y 100min
lia.Monitor.Store.TransparentStoreFast.writer_2.writemode=11

# store all objects for one day, at last check this ment ~90k values in this table
# by default this one is ignored but you can enable it by setting the above 
#    lia.Monitor.Store.TransparentStoreFast.web_writes = 4
lia.Monitor.Store.TransparentStoreFast.writer_3.total_time=86400
lia.Monitor.Store.TransparentStoreFast.writer_3.table_name=ml_obj
lia.Monitor.Store.TransparentStoreFast.writer_3.descr=objects
lia.Monitor.Store.TransparentStoreFast.writer_3.writemode=2


# Some storage options
# lia.Monitor.Store.Fast.DBWriter4.vacuum_analyze=true
# lia.Monitor.Store.Fast.DBWriter4.cluster=false


#########################################################################

# Filter classes to load
# lia.Monitor.JiniClient.Store.dynamic_filters=

# Data producers
# lia.Monitor.JiniClient.Store.data_producers=

# Some classes to instantiate once at startup
# lia.Monitor.JiniClient.Store.load_on_startup=

# Where are the action files
# lia.util.actions.base_folder=/home/monalisa/MLrepository/actions

# Self monitoring
lia.Repository.selfMonitoring=true
lia.Repository.selfMonitoring.database_location=/home/monalisa/MLrepository/pgsql_store

# Disable debugging and auto-generating pages in the background
lia.web.page_timing=false
lia.web.cache_refresh_disabled=true

# Reject crawlers, they can make a huge mess continuously requesting charts ...
lia.web.robots_exclusion.enabled=true
lia.web.robots_exclusion.names=msnbot,searchpreview,psbot,fast enterprise crawler,Baiduspider
lia.web.robots_exclusion.ip_classes=137.138.137.15,137.138.137.157,62.147.170.191,61.108.83.106,220.181.7.,123.125.66.,207.46.13.,207.46.199.,207.46.195.,207.46.204.
lia.web.robots_exclusion.ip_names=search03.cern.ch,search04.cern.ch,intranet.wartel.net

# Last value cache, in minutes
lia.web.Cache.RecentData = 120
