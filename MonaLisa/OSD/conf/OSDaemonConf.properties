
lia.osdaemon.OSDaemon.listenPort = 3401
lia.osdaemon.OSDaemon.MLAgentAddress = boson.cacr.caltech.edu
#lia.osdaemon.OSDaemon.MLAgentAddress = 192.91.246.188
lia.osdaemon.OSDaemon.MLAgentPort = 25001
lia.Monitor.LUSs=boson.cacr.caltech.edu



################ Advanced logging ( 'logrotate' style )###########################
##
## If you wold like to enable MonALISA to "logrotate" it's logs
## please comment the upper 3 lines and uncomment the following ones
##
## This will create 4 files that will be logrotated, after reaching
## the size limit
##
# handlers= java.util.logging.FileHandler
# java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter

# File size in bytes!
# java.util.logging.FileHandler.limit = 1000000

#Number of files used in cycle through
# java.util.logging.FileHandler.count = 4

#Whether should append at the end of a file log or start with a new one
# java.util.logging.FileHandler.append = true
# java.util.logging.FileHandler.pattern = ML%g.log

## logging to stdout and stderr options
## MonaLisa uses standard logging included since java 1.4
handlers=java.util.logging.ConsoleHandler
java.util.logging.ConsoleHandler.level = FINEST
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
#lia.Agents.BService.level = FINEST

#java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
#java.util.logging.FileHandler.limit=1000000
#java.util.logging.FileHandler.count=4
#java.util.logging.FileHandler.append=true
#java.util.logging.FileHandler.pattern=ML%g.log

