#
#
# Configuration file for PipeResultWriter
#
#
################################################

#
# BUFFER_SIZE specifies the internal *circular* buffer used 
# by the filter to hold only _LAST_ BUFFER_SIZE (e)Results in memory, 
# in case it cannot write to the named pipe ( e.g. there is no consumer at the other end )
# 
#
BUFFER_SIZE = 2000

#
# The PIPE_NAME specifies the *FULL* path to a named pipe in which
# the filter will try to write the (e)Results
#
# The filter will try to use `mkfifo` UNIX cmd to create the pipe,
# if the pipe does not exists. From the JVM point of view if a file
# with the same name already exists it will write all the results in that file
#
PIPE_NAME = /home/monalisa_test/MonaLisa/Service/usr_code/FilterExamples/PipeResultWriter/MLResultsPipe


#
#
# PREDICATES specifies a list of predicates to filter a specific set of (e)Results
# The predicates must be separated by ; 
#
# The predicate is specified in the following form F/C/N/Param_1|Param_2|...|Param_n,
# where:
#       F - Farm Name
#       C - Cluster Name
#       N - Node Name
#       Param_x - Param Name
# 
#
#
# There are two wildcards which can be used with any of the names above: '*' and '%'. 
# The first one is used to specify all the possible values for a specific Name, while
# the second one is used to match partial names ( similar to SQL "LIKE" )
#
#
# Example:
# PREDICATES = */Mona%/*/Mem%|Load5 ; */*/*/%_IN
#
# The example above defines two predicates. The first one will filter all the results
# with the CLuster Names starting with "Mona" and parameter names either starting with "Mem",
# either the entire parameter name is Load5. The second predicate will filter all the results
# having the parameter name ending with "_IN"
#
#
#  !!! If PREDICATES is not defined in this file all the (e)Results will be published
#
# PREDICATES=*/Monalisa/*/Mem%|%Load%

PREDICATES=
