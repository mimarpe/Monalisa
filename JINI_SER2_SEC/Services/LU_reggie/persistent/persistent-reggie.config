/* Configuration source file for Reggie using SSL */

import com.sun.jini.reggie.RegistrarPermission;

import javax.security.auth.login.LoginContext;

import net.jini.constraint.BasicMethodConstraints;
import net.jini.core.constraint.ClientAuthentication;
import net.jini.core.constraint.Integrity;
import net.jini.core.constraint.InvocationConstraint;
import net.jini.core.constraint.InvocationConstraints;
import net.jini.core.constraint.ServerAuthentication;
import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.BasicILFactory;
import net.jini.jeri.ssl.SslServerEndpoint;
import net.jini.security.AuthenticationPermission;
import net.jini.security.BasicProxyPreparer;

import lia.reggie.HostCheckILFactory;


import java.net.NetworkInterface;

com.sun.jini.reggie {

    /* Reggie settings */
    
    //join groups 
    initialMemberGroups = new String[] { "test" };
      
    //unicast port
    //initialUnicastDiscoveryPort = 4042;
    
    //disable multicast
    multicastInterfaces = new NetworkInterface[]{};
  
    //persistence directory
    persistenceDirectory = "${jini.ser.reggie.home}/reggie_tmp";

    /* JAAS login, reggie.login */
    loginContext = new LoginContext("com.sun.jini.Reggie");

    /* Exporters 
	- export LUS proxy through jeri
    */
    private serviceEndpoint = SslServerEndpoint.getInstance(8765);
    private serviceConstraints = 
	new BasicMethodConstraints(
	    new InvocationConstraints(
		null,
		new InvocationConstraint[]{ ServerAuthentication.NO, ClientAuthentication.YES}
		
	    )
	);
    	    
    private serviceILFactory = new HostCheckILFactory(serviceConstraints, RegistrarPermission.class);

    serverExporter = new BasicJeriExporter(serviceEndpoint, serviceILFactory);


}//end com.sun.jini.reggie

/* Items used in multiple blocks below */
shared.entries {

    private serviceLookupConstraints = 
	new BasicMethodConstraints( 
	    new InvocationConstraints(
		 new InvocationConstraint[] {
		    /*ClientAuthentication.YES*/
		    }, 
		new InvocationConstraint[] {
		    ClientAuthentication.YES,
		    ServerAuthentication.YES
		    }
		    ));

}//end shared.entries

/* Configuration block for the lookup discovery utility */
net.jini.discovery.LookupDiscovery {
	    
    registrarPreparer = 
	new BasicProxyPreparer( 
	    false,
	    shared.entries.serviceLookupConstraints,
	    null
	    );

}//end net.jini.discovery.LookupDiscovery

/* Configuration block for the join manager */
net.jini.lookup.JoinManager {

    registrarPreparer    = net.jini.discovery.LookupDiscovery.registrarPreparer;
    registrationPreparer = net.jini.discovery.LookupDiscovery.registrarPreparer;
    serviceLeasePreparer = net.jini.discovery.LookupDiscovery.registrarPreparer;

}//end net.jini.lookup.JoinManager


